<Window x:Class="GW2BuildLibrary.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        xmlns:local="clr-namespace:GW2BuildLibrary"
        xmlns:controls="clr-namespace:GW2BuildLibrary.UI.Controls"
        xmlns:converters="clr-namespace:GW2BuildLibrary.UI.Converters"
        xmlns:viewmodels="clr-namespace:GW2BuildLibrary.UI.ViewModels"
        mc:Ignorable="d"
        Title="GW2BuildLibrary"
        Width="0" Height="0"
        MinWidth="520" MinHeight="380"
        WindowStartupLocation="CenterScreen">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.StoreOrRecallBuildTemplate}"
                        Executed="StoreOrRecallBuildTemplate_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.ClearBuildTemplate}"
                        Executed="ClearBuildTemplate_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.EnterRenameMode}"
                        Executed="EnterRenameMode_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.ExitRenameMode}"
                        Executed="ExitRenameMode_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.ToggleFilter}"
                        Executed="ToggleFilter_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.NextPage}"
                        Executed="NextPage_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.PrevPage}"
                        Executed="PrevPage_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.CloseApplication}"
                        Executed="CloseApplication_Executed"/>
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/GW2BuildLibrary;component/UI/ResourceDictionaries/Brushes.xaml"/>
                <ResourceDictionary Source="/GW2BuildLibrary;component/UI/ResourceDictionaries/Converters.xaml"/>
                <ResourceDictionary Source="/GW2BuildLibrary;component/UI/ResourceDictionaries/Geometries.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="textBlockStyle"
                   TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground"
                        Value="{StaticResource FilledTextForegoundBrush}"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="VerticalAlignment"
                        Value="Center"/>
                <Setter Property="HorizontalAlignment"
                        Value="Stretch"/>
                <Setter Property="TextAlignment"
                        Value="Left"/>
                <Setter Property="FontFamily"
                        Value="Tahoma"/>
                <Setter Property="FontSize"
                        Value="12"/>
            </Style>

            <Style x:Key="interactableButtonStyle"
                   TargetType="{x:Type ButtonBase}">
                <Setter Property="Opacity"
                        Value="0.6"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Opacity"
                                Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed"
                             Value="True">
                        <Setter Property="Opacity"
                                Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="invisibleButtonTemplate"
                             TargetType="{x:Type ButtonBase}">
                <ContentPresenter Content="{TemplateBinding Content}"/>
            </ControlTemplate>

            <Style x:Key="ioButtonStyle"
                   BasedOn="{StaticResource interactableButtonStyle}"
                   TargetType="{x:Type Button}">
                <Setter Property="Template"
                        Value="{StaticResource invisibleButtonTemplate}"/>
                <Setter Property="Command"
                        Value="{x:Static local:MainWindow.StoreOrRecallBuildTemplate}"/>
            </Style>

            <ControlTemplate x:Key="iconButtonTemplate"
                             TargetType="{x:Type ButtonBase}">
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        Background="#01000000"
                        Margin="0"
                        Padding="{TemplateBinding Padding}">
                    <Path Fill="{TemplateBinding Foreground}"
                          Stretch="Uniform"
                          Margin="3"
                          Data="{TemplateBinding Content}"/>
                </Border>
            </ControlTemplate>

            <Style x:Key="buttonBaseStyle"
                   BasedOn="{StaticResource interactableButtonStyle}"
                   TargetType="{x:Type ButtonBase}">
                <Setter Property="Width"
                        Value="{Binding Path=ActualHeight,
                                        RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Foreground"
                        Value="AntiqueWhite"/>
                <Setter Property="BorderBrush"
                        Value="AntiqueWhite"/>
                <Setter Property="BorderThickness"
                        Value="1"/>
                <Setter Property="VerticalAlignment"
                        Value="Stretch"/>
                <Setter Property="HorizontalAlignment"
                        Value="Center"/>
                <Setter Property="Template"
                        Value="{StaticResource iconButtonTemplate}"/>
            </Style>
            
            <Style x:Key="clearButtonStyle"
                   BasedOn="{StaticResource buttonBaseStyle}"
                   TargetType="{x:Type Button}">
                <Setter Property="Command"
                        Value="{x:Static local:MainWindow.ClearBuildTemplate}"/>
                <Setter Property="Content"
                        Value="{StaticResource crossIconGeometry}"/>
            </Style>
            
            <Style x:Key="renameButtonStyle"
                   BasedOn="{StaticResource buttonBaseStyle}"
                   TargetType="{x:Type Button}">
                <Setter Property="Command"
                        Value="{x:Static local:MainWindow.EnterRenameMode}"/>
                <Setter Property="Content"
                        Value="{StaticResource renameIconGeometry}"/>
            </Style>

            <ControlTemplate x:Key="filterButtonTemplate"
                             TargetType="{x:Type ToggleButton}">
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        Background="#01000000"
                        Margin="0">
                    <Image Stretch="Uniform"
                           Margin="3"
                           Source="{TemplateBinding Property=CommandParameter,
                                                    Converter={StaticResource professionIconConverter}}"/>
                </Border>
            </ControlTemplate>

            <Style x:Key="filterButtonStyle"
                   BasedOn="{StaticResource buttonBaseStyle}"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="Height"
                        Value="30"/>
                <Setter Property="Margin"
                        Value="0,0,2,0"/>
                <Setter Property="Template"
                        Value="{StaticResource filterButtonTemplate}"/>
                <Setter Property="Command"
                        Value="{x:Static local:MainWindow.ToggleFilter}"/>
                <Setter Property="IsChecked">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource equalityConverter}"
                                      Mode="OneWay">
                            <Binding Path="CommandParameter"
                                     RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ProfessionFilter"
                                     RelativeSource="{RelativeSource AncestorType=local:MainWindow}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked"
                             Value="True">
                        <Setter Property="Opacity"
                                Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="{x:Type ToolTip}"
                   TargetType="ToolTip">
                <Setter Property="OverridesDefaultStyle"
                        Value="True"/>
                <Setter Property="HasDropShadow"
                        Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Border>
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Background"
                        Value="{StaticResource defaultBackgroundBrush}"/>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=InOverlayMode,
                                                   RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}},
                                                   Mode=OneTime}"
                                 Value="True">
                        <Setter Property="Padding"
                                    Value="10"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!-- Profession Filter Buttons -->
            <StackPanel Grid.Row="0"
                        Margin="5"
                        Orientation="Horizontal">
                <ToggleButton x:Name="PART_FilterButton_Guardian"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Guardian}"/>
                
                <ToggleButton x:Name="PART_FilterButton_Warrior"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Warrior}"/>

                <ToggleButton x:Name="PART_FilterButton_Engineer"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Engineer}"/>

                <ToggleButton x:Name="PART_FilterButton_Ranger"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Ranger}"/>

                <ToggleButton x:Name="PART_FilterButton_Thief"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Thief}"/>

                <ToggleButton x:Name="PART_FilterButton_Elementalist"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Elementalist}"/>

                <ToggleButton x:Name="PART_FilterButton_Mesmer"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Mesmer}"/>


                <ToggleButton x:Name="PART_FilterButton_Necromancer"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Necromancer}"/>

                <ToggleButton x:Name="PART_FilterButton_Revenant"
                              Style="{StaticResource filterButtonStyle}"
                              CommandParameter="{x:Static local:Profession.Revenant}"/>
            </StackPanel>

            <!-- System Buttons -->
            <StackPanel Grid.Row="0"
                        Margin="5"
                        Orientation="Horizontal"
                        FlowDirection="RightToLeft">
                <!-- Close Button -->
                <Button Style="{StaticResource clearButtonStyle}"
                        Margin="0,0,2,0"
                        Command="{x:Static local:MainWindow.CloseApplication}"
                        Visibility="{Binding Path=InOverlayMode,
                                             RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}},
                                             Converter={StaticResource boolToVisConverter},
                                             Mode=OneTime}"/>

                <!-- Next Page Button -->
                <Button Style="{StaticResource buttonBaseStyle}"
                        Command="{x:Static local:MainWindow.NextPage}"
                        Content="{StaticResource nextIconGeometry}"/>

                <!-- Current Page -->
                <TextBlock Style="{StaticResource textBlockStyle}"
                           TextAlignment="Center"
                           Width="30"
                           Text="{Binding Path=CurrentPage,
                                          RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"/>

                <!-- Prev Page Button -->
                <Button Style="{StaticResource buttonBaseStyle}"
                        Command="{x:Static local:MainWindow.PrevPage}"
                        Content="{StaticResource prevIconGeometry}"/>
            </StackPanel>

            <!-- Build Templates -->
            <controls:BuildTemplateItemsControl x:Name="BuildTemplateItems"
                                                Grid.Row="1"
                                                Padding="0,0,2,2"
                                                ItemsSource="{Binding Path=BuildTemplateModels,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}},
                                                                      Mode=OneWay}">
                <controls:BuildTemplateItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="{Binding Path=Rows,
                                                    ElementName='BuildTemplateItems',
                                                    Mode=OneWay}"
                                     Columns="{Binding Path=Columns,
                                                       ElementName='BuildTemplateItems',
                                                       Mode=OneWay}"
                                     IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </controls:BuildTemplateItemsControl.ItemsPanel>
                <controls:BuildTemplateItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:BuildTemplateViewModel}">
                        <Button Style="{StaticResource ioButtonStyle}"
                                CommandParameter="{Binding}">
                            <Border Background="Black"
                                    Margin="2,2,0,0"
                                    CornerRadius="2"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.ShowDuration="30000"
                                    ToolTipService.Placement="Bottom"
                                    ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource Self}}">
                                <Border.ToolTip>
                                    <controls:BuildPreview Slot1="{Binding Path=Slot1}"
                                                           Slot2="{Binding Path=Slot2}"
                                                           Slot3="{Binding Path=Slot3}"/>
                                </Border.ToolTip>
                                
                                <DockPanel LastChildFill="True">
                                    <Button DockPanel.Dock="Right"
                                            Style="{StaticResource clearButtonStyle}"
                                            CommandParameter="{Binding}"/>

                                    <Button DockPanel.Dock="Right"
                                            Style="{StaticResource renameButtonStyle}"
                                            Margin="0,0,2,0"
                                            CommandParameter="{Binding}"/>

                                    <Image DockPanel.Dock="Left"
                                           Margin="2"
                                           Stretch="Uniform"
                                           Source="{Binding Path=Profession,
                                                            Converter={StaticResource professionIconConverter},
                                                            Mode=OneWay}"/>

                                    <TextBlock x:Name="PART_TemplateName"
                                               Style="{StaticResource textBlockStyle}"
                                               Text="{Binding Path=Name,
                                                              Mode=OneWay}"/>
                                </DockPanel>
                            </Border>
                        </Button>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=Name}"
                                         Value="Empty">
                                <Setter TargetName="PART_TemplateName"
                                        Property="Foreground"
                                        Value="White"/>
                                <Setter TargetName="PART_TemplateName"
                                        Property="TextAlignment"
                                        Value="Center"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </controls:BuildTemplateItemsControl.ItemTemplate>
            </controls:BuildTemplateItemsControl>

            <Border x:Name="PART_RenameInputDialog"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Background="#A0000000"
                    Visibility="Collapsed">
                <Border VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="250" Height="100"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{StaticResource defaultBackgroundBrush}"
                        CornerRadius="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name="PART_RenameTextInput"
                                 Grid.Row="0" Grid.Column="0"
                                 Grid.ColumnSpan="2"
                                 Height="30"
                                 Margin="20,0"
                                 FontFamily="Tahoma"
                                 FontSize="12"
                                 TextAlignment="Left"
                                 VerticalContentAlignment="Center"
                                 MaxLength="31">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{x:Static local:MainWindow.ExitRenameMode}"
                                            CommandParameter="True"
                                            Key="Enter"/>
                                <KeyBinding Command="{x:Static local:MainWindow.ExitRenameMode}"
                                            CommandParameter="True"
                                            Key="Return"/>
                            </TextBox.InputBindings>
                        </TextBox>

                        <Button Grid.Row="1" Grid.Column="0"
                                Height="30"
                                Style="{StaticResource buttonBaseStyle}"
                                Content="{StaticResource tickIconGeometry}"
                                Margin="5"
                                Command="{x:Static local:MainWindow.ExitRenameMode}"
                                CommandParameter="True"/>

                        <Button Grid.Row="1" Grid.Column="1"
                                Height="30"
                                Style="{StaticResource buttonBaseStyle}"
                                Content="{StaticResource crossIconGeometry}"
                                Margin="5"
                                Command="{x:Static local:MainWindow.ExitRenameMode}"
                                CommandParameter="False"/>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </Border>
</Window>
